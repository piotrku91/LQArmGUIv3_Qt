#include "slotmaster.h"
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SlotMaster::ImportFromParams(const int& Index, const QString& IDName, const int& ActualML, const int& MaxML)
{
    setIDName(Index,IDName);
    setActualML(Index,ActualML);
    setMaxML(Index,MaxML);
    emit pushUpdate();

};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void SlotMaster::ExportToParams(const int& Index, QString& IDName, int& ActualML, int& MaxML)
{
    IDName=getIDName(Index);
    ActualML=getActualML(Index);
    MaxML=getMaxML(Index);

};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
QStringList* SlotMaster::GetActualIDs()
{
    ActualIDs.clear();
    for (auto OneSlot : Slot) {
    ActualIDs.append(OneSlot.IdName);
    };
  return &ActualIDs;
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
QString SlotMaster::getIDName(const int& idx) {return Slot[idx].IdName;};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int SlotMaster::getMaxML(const int& idx) {return Slot[idx].MaxML;};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int SlotMaster::getActualML(const int& idx) {return Slot[idx].ActualML;};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void SlotMaster::setIDName(const int& idx, const QString& NewName) {
    Slot[idx].IdName=NewName.toUpper();
    GetActualIDs();
    m_Mixer_ptr->pushUpdate();

};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void SlotMaster::setMaxML(const int& idx, const int& NewMaxML) {Slot[idx].MaxML=NewMaxML;};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void SlotMaster::setActualML(const int& idx, const int& NewActualML) {Slot[idx].ActualML=NewActualML;};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
