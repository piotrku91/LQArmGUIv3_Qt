#include "serialx.h"
#include <QtSerialPort/QSerialPort>

SerialX::SerialX(): sP(new QSerialPort(this))
{

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::begin(const QString& dev, const int& baudrate){

    sP->setPortName(dev);
    sP->setBaudRate(baudrate);
    sP->setFlowControl(QSerialPort::NoFlowControl);
    sP->setDataBits(QSerialPort::Data8);
    sP->setStopBits(QSerialPort::OneStop);
    Log("** Próba połączenia z urządzeniem: "+dev+ " (baudrate: "+QString::number(baudrate)+")");

    connect(sP,SIGNAL(readyRead()),this,SLOT(readData()));

 if (!sP->open(QIODevice::ReadWrite)) {Log("** Błąd - połączenie nieudane.");} else {Log("** Sukces - połączenie ustanowione.");};

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::end(){

    if (sP->isOpen()) {
    sP->close();
    Log("** Połączenie zakończone.");
}

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::Log(const QString& Line){
    emit getLog(Line);

}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::write(const QString& msg){

    const QByteArray &messageArray = msg.toLocal8Bit();
    sP->write(messageArray);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::beginSlot(const QString& dev, const int& baudrate){
   begin(dev,baudrate);

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::writeSlot(const QString& msg){
    write(msg);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::closeSlot(){
     end();
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void SerialX::readData(){

    if ((sP->isOpen()) && (sP->waitForReadyRead())) {

        QByteArray requestData = sP->readAll();
        while (sP->waitForReadyRead(10))
            requestData += sP->readAll();

   const QString request = QString::fromUtf8(requestData);



        emit getNewData(request);
    }

}






